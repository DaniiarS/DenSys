# Generated by Django 4.1.3 on 2022-11-06 04:31

from django.db import migrations, models
import patients.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=200)),
                ('surname', models.CharField(max_length=200)),
                ('middlename', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('reg_date', models.DateField(auto_now_add=True)),
                ('iin', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('id', models.PositiveIntegerField()),
                ('blood_type', models.CharField(max_length=3)),
                ('marital_status', models.CharField(max_length=8)),
                ('contact_number', models.PositiveIntegerField()),
                ('emergency_contact_number', models.PositiveIntegerField()),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', patients.models.AccountManager()),
            ],
        ),
    ]
